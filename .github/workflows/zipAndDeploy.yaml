name: Workflow que automatiza la creacion del zip del repositorio de kodi y publica la web

on:
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  jobZipHtml:
    name: Crear un zip de la carpeta repository.rubencinrs y publica la web

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps: 

    - name: Descarga el repositorio de GitHub
      uses: actions/checkout@v4

    - name: Crear zip del repositorio de kodi
      uses: thedoctor0/zip-release@0.7.5
      with:
        type: 'zip'
        filename: 'repository.rubencinrs-0.0.1.zip'
        exclusions: '*.git* /*node_modules/* .editorconfig addons.xml* index.html *.md *.zip '    

    - name: Hacemos el commit
      run: |
        git config --local user.email "rubenca13@gmail.com"
        git config --local user.name "RubencinRS"
        git add .
        git commit -m "Add zip" -m "Descripcioneando"

    - name: Subimos los cambios a GitHub
      uses: ad-m/github-push-action@master
      with:
        branch: main

    - name: Setup Pages
      uses: actions/configure-pages@v5
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        # Upload entire repository
        path: '.'
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4